---
// src/pages/contacto.astro
import Layout from '../components/layout/Layout.astro';
import Contact from '../components/react/Contact';
import { 
  MapPin, Mail, Phone, Clock, MessageCircle, Calendar, 
  CheckCircle, Rocket, Star, ArrowRight, Shield, Zap,
  Users, Award, Coffee, HeadphonesIcon, Globe, Send
} from 'lucide-react';

const contactInfo = [
  {
    icon: MapPin,
    title: "Ubicación",
    details: ["La Plata, Buenos Aires", "Argentina"],
    description: "Trabajamos localmente e internacionalmente",
    color: "from-blue-500 to-cyan-500"
  },
  {
    icon: Mail,
    title: "Email",
    details: ["lambdacodestudio@gmail.com"],
    description: "Respuesta en menos de 24 horas",
    color: "from-violet-500 to-purple-500"
  },
  {
    icon: Phone,
    title: "Teléfono",
    details: ["+54-2227-478196", "+54-011-50220157"],
    description: "Llamadas y WhatsApp disponibles",
    color: "from-green-500 to-emerald-500"
  },
  {
    icon: Clock,
    title: "Horario",
    details: ["Lun - Vie: 8:00 - 20:00", "Sáb: 8:00 - 14:00"],
    description: "Horario de Argentina (GMT-3)",
    color: "from-orange-500 to-red-500"
  }
];

const processSteps = [
  {
    number: "01",
    title: "Consulta Inicial",
    description: "Conversamos sobre tu proyecto, objetivos y necesidades específicas",
    icon: MessageCircle,
    duration: "30-60 min",
    deliverable: "Análisis preliminar"
  },
  {
    number: "02", 
    title: "Propuesta Detallada",
    description: "Elaboramos un plan técnico completo con cronograma y presupuesto",
    icon: Calendar,
    duration: "2-3 días",
    deliverable: "Documento técnico"
  },
  {
    number: "03",
    title: "Desarrollo Iterativo", 
    description: "Trabajamos en sprints con entregas parciales y feedback continuo",
    icon: Rocket,
    duration: "2-8 semanas",
    deliverable: "Entregables semanales"
  },
  {
    number: "04",
    title: "Lanzamiento y Soporte",
    description: "Desplegamos tu solución y ofrecemos soporte post-lanzamiento",
    icon: CheckCircle,
    duration: "Ongoing",
    deliverable: "Solución completa"
  }
];

const faqs = [
  {
    question: "¿Qué servicios ofrecemos?",
    answer: "Ofrecemos desarrollo completo de aplicaciones web, móviles, backend APIs, diseño UI/UX y consultoría tecnológica. Nos especializamos en React, React Native, Node.js y tecnologías modernas.",
    category: "servicios"
  },
  {
    question: "¿Cómo es nuestro proceso de trabajo?",
    answer: "Seguimos una metodología ágil en 4 etapas: consulta inicial gratuita, propuesta detallada, desarrollo iterativo con entregas parciales, y lanzamiento con soporte continuo.",
    category: "proceso"
  },
  {
    question: "¿Cuáles son los tiempos de entrega?",
    answer: "Los tiempos varían según la complejidad: Landing pages (1-2 semanas), aplicaciones web completas (4-8 semanas), apps móviles (6-12 semanas). Siempre establecemos cronogramas realistas.",
    category: "tiempos"
  },
  {
    question: "¿Ofrecen soporte post-lanzamiento?",
    answer: "Sí, todos nuestros proyectos incluyen garantía y ofrecemos planes de mantenimiento mensual. También brindamos soporte para actualizaciones y nuevas funcionalidades.",
    category: "soporte"
  },
  {
    question: "¿Trabajan con empresas internacionales?",
    answer: "Absolutamente. Tenemos experiencia trabajando con clientes de Argentina, Uruguay y otros países. Manejamos husos horarios y comunicación remota de manera eficiente.",
    category: "internacional"
  },
  {
    question: "¿Cuál es el costo de un proyecto?",
    answer: "Los costos dependen del alcance y complejidad. Ofrecemos presupuestos personalizados tras el análisis inicial. Contamos con opciones flexibles de pago y financiamiento.",
    category: "costos"
  }
];

const whyChooseUs = [
  {
    icon: Shield,
    title: "Garantía de Calidad",
    description: "Código limpio, testing exhaustivo y documentación completa"
  },
  {
    icon: Zap,
    title: "Entrega Rápida",
    description: "Metodología ágil con entregas semanales y feedback continuo"
  },
  {
    icon: Users,
    title: "Equipo Experto",
    description: "3+ años de experiencia en tecnologías modernas"
  },
  {
    icon: HeadphonesIcon,
    title: "Soporte 24/7",
    description: "Comunicación fluida y soporte post-lanzamiento garantizado"
  }
];

const testimonials = [
  {
    quote: "Lambda Code Studio superó nuestras expectativas. La app que desarrollaron transformó completamente nuestra gestión de pacientes.",
    author: "Juan",
    position: "Directora, Clínica Dental Sonrisa",
    rating: 5,
    project: "DistriLink"
  },
  {
    quote: "Profesionales excepcionales. Entregaron exactamente lo que necesitábamos, a tiempo y con un soporte increíble.",
    author: "Lucas", 
    position: "Gerente General, Hotel Plaza",
    rating: 5,
    project: "OdontoCare"
  }
];

const contactMethods = [
  {
    title: "WhatsApp",
    description: "Respuesta inmediata",
    action: "Enviar mensaje",
    href: "https://wa.me/5492227478196",
    icon: MessageCircle,
    color: "from-green-500 to-emerald-500",
    recommended: true
  },
  {
    title: "Email",
    description: "Para consultas detalladas", 
    action: "Enviar email",
    href: "mailto:lambdacodestudio@gmail.com",
    icon: Mail,
    color: "from-blue-500 to-indigo-500"
  },
  {
    title: "Formulario",
    description: "Consulta estructurada",
    action: "Completar formulario",
    href: "#contact-form",
    icon: Send,
    color: "from-purple-500 to-pink-500"
  }
];
---

<Layout title="Contacto | LambdaCodeStudio">
  <!-- Hero Section Mejorado -->
  <div class="relative min-h-screen flex items-center justify-center bg-black overflow-hidden">
    <!-- Background Effects -->
    <div class="absolute inset-0 bg-gradient-to-br from-violet-900/30 via-fuchsia-900/20 to-pink-900/30"></div>
    <div class="absolute inset-0 bg-[radial-gradient(ellipse_at_center,rgba(120,119,198,0.1),transparent)]"></div>
    
    <!-- Animated Elements -->
    <div class="absolute top-20 left-10 w-32 h-32 bg-violet-500/10 rounded-full blur-xl animate-pulse"></div>
    <div class="absolute bottom-20 right-10 w-40 h-40 bg-fuchsia-500/10 rounded-full blur-xl animate-pulse delay-1000"></div>
    <div class="absolute top-1/2 right-1/4 w-20 h-20 bg-pink-500/10 rounded-full blur-xl animate-pulse delay-500"></div>
    
    <div class="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20">
      <div class="text-center space-y-8">
        <!-- Badge -->
        <div class="inline-flex items-center gap-2 px-4 py-2 bg-violet-500/10 rounded-full border border-violet-500/20">
          <MessageCircle className="w-4 h-4 text-violet-400" />
          <span class="text-violet-300 text-sm font-medium">Hablemos de tu proyecto</span>
        </div>
        
        <!-- Main Title -->
        <h1 class="text-5xl sm:text-6xl lg:text-7xl font-bold leading-tight">
          <span class="text-white">Transformemos tu </span>
          <span class="bg-clip-text text-transparent bg-gradient-to-r from-violet-500 via-fuchsia-500 to-pink-500">
            Idea en Realidad
          </span>
        </h1>
        
        <!-- Subtitle -->
        <p class="text-xl sm:text-2xl text-gray-400 max-w-4xl mx-auto leading-relaxed">
          ¿Tienes un proyecto en mente? Conversemos sobre cómo podemos ayudarte a 
          <span class="text-violet-400 font-semibold">llevarlo al siguiente nivel</span> con tecnología de vanguardia.
        </p>
        
        <!-- Stats Row -->
        <div class="grid grid-cols-2 md:grid-cols-4 gap-8 max-w-4xl mx-auto pt-8">
          <div class="text-center">
            <div class="text-3xl font-bold text-white mb-2">< 24h</div>
            <div class="text-gray-400">Tiempo de respuesta</div>
          </div>
          <div class="text-center">
            <div class="text-3xl font-bold text-white mb-2">6</div>
            <div class="text-gray-400">Proyectos exitosos</div>
          </div>
          <div class="text-center">
            <div class="text-3xl font-bold text-white mb-2">99%</div>
            <div class="text-gray-400">Satisfacción cliente</div>
          </div>
          <div class="text-center">
            <div class="text-3xl font-bold text-white mb-2">3+</div>
            <div class="text-gray-400">Años experiencia</div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Contact Methods -->
  <div class="bg-black py-20 border-b border-gray-800">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-16">
        <h2 class="text-4xl font-bold text-white mb-4">Elige tu Método de Contacto Preferido</h2>
        <p class="text-xl text-gray-400">Estamos aquí para ayudarte de la manera que te resulte más cómoda</p>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
        {contactMethods.map((method, index) => (
          <a 
            href={method.href}
            class="group relative bg-gradient-to-br from-gray-900/50 to-gray-800/30 backdrop-blur-xl rounded-2xl overflow-hidden border border-gray-700/50 hover:border-violet-500/50 transition-all duration-500 hover:scale-105 p-8 text-center"
          >
            {method.recommended && (
              <div class="absolute top-4 right-4 px-3 py-1 bg-gradient-to-r from-violet-500 to-fuchsia-500 text-white text-xs font-bold rounded-full">
                Recomendado
              </div>
            )}
            
            <div class={`w-16 h-16 mx-auto mb-6 bg-gradient-to-r ${method.color} rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform duration-300`}>
              <method.icon className="w-8 h-8 text-white" />
            </div>
            
            <h3 class="text-2xl font-bold text-white mb-2 group-hover:text-violet-400 transition-colors">
              {method.title}
            </h3>
            
            <p class="text-gray-400 mb-6">{method.description}</p>
            
            <div class="inline-flex items-center gap-2 text-violet-400 font-medium group-hover:gap-3 transition-all duration-300">
              {method.action}
              <ArrowRight className="w-4 h-4" />
            </div>
          </a>
        ))}
      </div>
    </div>
  </div>

  <!-- Contact Info Cards -->
  <div class="bg-black py-20">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-16">
        <h2 class="text-4xl font-bold text-white mb-4">Información de Contacto</h2>
        <p class="text-xl text-gray-400">Todas las formas de conectar con nosotros</p>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
        {contactInfo.map(({ icon: Icon, title, details, description, color }, index) => (
          <div class="group bg-gray-900/30 backdrop-blur-xl p-8 rounded-2xl border border-violet-500/20 hover:bg-gray-900/50 transition-all duration-500 hover:scale-105 text-center">
            <div class={`w-16 h-16 mx-auto mb-6 bg-gradient-to-r ${color} rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform duration-300`}>
              <Icon className="w-8 h-8 text-white" />
            </div>
            
            <h3 class="text-xl font-semibold text-white mb-3 group-hover:text-violet-400 transition-colors">
              {title}
            </h3>
            
            {details.map((detail, i) => (
              <p key={i} class="text-gray-300 font-medium mb-1">{detail}</p>
            ))}
            
            <p class="text-gray-400 text-sm mt-3">{description}</p>
          </div>
        ))}
      </div>
    </div>
  </div>

  <!-- Process Section -->
  <div class="bg-black py-20 border-t border-gray-800">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-16">
        <h2 class="text-4xl font-bold text-white mb-4">Nuestro Proceso de Trabajo</h2>
        <p class="text-xl text-gray-400 max-w-3xl mx-auto">
          Un flujo de trabajo probado que garantiza resultados excepcionales y comunicación transparente
        </p>
      </div>
      
      <div class="relative">
        <!-- Process Line -->
        <div class="hidden lg:block absolute top-1/2 left-0 right-0 h-1 bg-gradient-to-r from-violet-500 via-fuchsia-500 to-pink-500 opacity-30"></div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
          {processSteps.map((step, index) => (
            <div class="relative group">
              <!-- Step Number Circle -->
              <div class="absolute -top-4 left-1/2 transform -translate-x-1/2 lg:relative lg:top-0 lg:left-0 lg:transform-none lg:mx-auto lg:mb-6 w-16 h-16 bg-gradient-to-r from-violet-500 to-fuchsia-500 rounded-full flex items-center justify-center text-white font-bold text-lg group-hover:scale-110 transition-transform duration-300 z-10">
                {step.number}
              </div>
              
              <div class="bg-gray-900/30 backdrop-blur-xl p-8 pt-12 lg:pt-8 rounded-2xl border border-violet-500/20 group-hover:bg-gray-900/50 transition-all duration-500 text-center">
                <div class="w-12 h-12 mx-auto mb-4 bg-gradient-to-r from-violet-500/20 to-fuchsia-500/20 rounded-lg flex items-center justify-center">
                  <step.icon className="w-6 h-6 text-violet-400" />
                </div>
                
                <h3 class="text-xl font-bold text-white mb-3 group-hover:text-violet-400 transition-colors">
                  {step.title}
                </h3>
                
                <p class="text-gray-400 mb-4 leading-relaxed">{step.description}</p>
                
                <div class="space-y-2 text-sm">
                  <div class="flex justify-between items-center">
                    <span class="text-gray-500">Duración:</span>
                    <span class="text-violet-400 font-medium">{step.duration}</span>
                  </div>
                  <div class="flex justify-between items-center">
                    <span class="text-gray-500">Entregable:</span>
                    <span class="text-gray-300 font-medium">{step.deliverable}</span>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  </div>

  <!-- Contact Form Section -->
  <div id="contact-form" class="bg-black py-20">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-16">
        <h2 class="text-4xl font-bold text-white mb-4">Cuéntanos sobre tu Proyecto</h2>
        <p class="text-xl text-gray-400">Completa el formulario y te contactaremos en menos de 24 horas</p>
      </div>
      
      <Contact client:load />
    </div>
  </div>

  <!-- Why Choose Us -->
  <div class="bg-black py-20 border-t border-gray-800">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-16">
        <h2 class="text-4xl font-bold text-white mb-4">¿Por Qué Elegirnos?</h2>
        <p class="text-xl text-gray-400">Lo que nos diferencia de otros desarrolladores</p>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
        {whyChooseUs.map(({ icon: Icon, title, description }, index) => (
          <div class="group bg-gray-900/30 backdrop-blur-xl p-8 rounded-2xl border border-violet-500/20 hover:bg-gray-900/50 transition-all duration-500 text-center">
            <div class="w-16 h-16 mx-auto mb-6 bg-gradient-to-r from-violet-500 to-fuchsia-500 rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
              <Icon className="w-8 h-8 text-white" />
            </div>
            
            <h3 class="text-xl font-bold text-white mb-3 group-hover:text-violet-400 transition-colors">
              {title}
            </h3>
            
            <p class="text-gray-400">{description}</p>
          </div>
        ))}
      </div>
    </div>
  </div>

  <!-- Testimonials -->
  <div class="bg-black py-20">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-16">
        <h2 class="text-4xl font-bold text-white mb-4">Lo Que Dicen Nuestros Clientes</h2>
        <p class="text-xl text-gray-400">Testimonios reales de proyectos exitosos</p>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8 max-w-4xl mx-auto">
        {testimonials.map((testimonial, index) => (
          <div class="group bg-gradient-to-br from-gray-900/50 to-gray-800/30 backdrop-blur-xl p-8 rounded-2xl border border-gray-700/50 hover:border-violet-500/50 transition-all duration-500">
            <!-- Project Badge -->
            <div class="inline-flex items-center gap-2 px-3 py-1 bg-violet-500/10 rounded-full border border-violet-500/20 mb-6">
              <Award className="w-4 h-4 text-violet-400" />
              <span class="text-violet-300 text-sm font-medium">{testimonial.project}</span>
            </div>
            
            <!-- Stars -->
            <div class="flex gap-1 mb-6">
              {[...Array(testimonial.rating)].map((_, i) => (
                <Star key={i} className="w-5 h-5 text-yellow-400 fill-current" />
              ))}
            </div>
            
            <!-- Quote -->
            <blockquote class="text-gray-300 mb-6 leading-relaxed italic text-lg">
              "{testimonial.quote}"
            </blockquote>
            
            <!-- Author -->
            <div class="flex items-center gap-4">
              <div class="w-12 h-12 bg-gradient-to-r from-violet-500 to-fuchsia-500 rounded-full flex items-center justify-center">
                <span class="text-white font-bold">{testimonial.author.charAt(0)}</span>
              </div>
              <div>
                <p class="text-white font-semibold">{testimonial.author}</p>
                <p class="text-gray-400 text-sm">{testimonial.position}</p>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>

  <!-- FAQ Section Mejorada -->
  <div class="bg-black py-20 border-t border-gray-800">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-16">
        <h2 class="text-4xl font-bold text-white mb-4">Preguntas Frecuentes</h2>
        <p class="text-xl text-gray-400">Respuestas a las consultas más comunes sobre nuestros servicios</p>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        {faqs.map((faq, index) => (
          <div class="group bg-gray-900/30 backdrop-blur-xl p-8 rounded-2xl border border-violet-500/20 hover:bg-gray-900/50 transition-all duration-500">
            <div class="flex items-start gap-4">
              <div class="flex-shrink-0 w-8 h-8 bg-gradient-to-r from-violet-500 to-fuchsia-500 rounded-lg flex items-center justify-center">
                <span class="text-white font-bold text-sm">{index + 1}</span>
              </div>
              
              <div class="flex-1">
                <h3 class="text-xl font-semibold text-white mb-3 group-hover:text-violet-400 transition-colors">
                  {faq.question}
                </h3>
                <p class="text-gray-400 leading-relaxed">
                  {faq.answer}
                </p>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>

  <!-- Final CTA -->
  <div class="bg-black py-20 border-t border-gray-800">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
      <div class="relative">
        <div class="absolute inset-0 bg-gradient-to-r from-violet-500/10 to-fuchsia-500/10 rounded-3xl blur-3xl"></div>
        <div class="relative bg-gray-900/30 backdrop-blur-xl p-12 rounded-3xl border border-violet-500/20">
          <h2 class="text-4xl font-bold text-white mb-6">
            ¿Listo para Comenzar tu Proyecto?
          </h2>
          <p class="text-xl text-gray-400 mb-8 max-w-2xl mx-auto">
            No esperes más. Conversemos sobre cómo podemos transformar tu idea en una solución digital exitosa.
          </p>
          
          <div class="flex flex-col sm:flex-row gap-4 justify-center">
            <a 
              href="https://wa.me/5492227478196"
              class="group relative px-8 py-4 bg-gradient-to-r from-green-500 to-emerald-500 text-white rounded-xl font-medium hover:from-green-600 hover:to-emerald-600 transition-all duration-300 hover:scale-105 hover:shadow-lg hover:shadow-green-500/25"
            >
              <span class="relative z-10 flex items-center gap-2">
                <MessageCircle className="w-5 h-5" />
                Contactar por WhatsApp
              </span>
            </a>
            
            <a 
              href="mailto:lambdacodestudio@gmail.com"
              class="px-8 py-4 bg-gray-900/50 text-white rounded-xl font-medium border border-violet-500/20 hover:bg-violet-500/10 hover:border-violet-500/50 transition-all duration-300 flex items-center gap-2"
            >
              <Mail className="w-5 h-5" />
              Enviar Email
            </a>
          </div>
          
          <p class="text-gray-500 text-sm mt-6">
            * Respuesta garantizada en menos de 24 horas
          </p>
        </div>
      </div>
    </div>
  </div>
</Layout>

<style>
  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-15px); }
  }

  @keyframes pulse-glow {
    0%, 100% { box-shadow: 0 0 20px rgba(139, 92, 246, 0.1); }
    50% { box-shadow: 0 0 40px rgba(139, 92, 246, 0.3); }
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  .animate-pulse-glow {
    animation: pulse-glow 3s ease-in-out infinite;
  }

  /* Smooth scrolling */
  html {
    scroll-behavior: smooth;
  }

  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.1);
  }

  ::-webkit-scrollbar-thumb {
    background: rgba(139, 92, 246, 0.3);
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: rgba(139, 92, 246, 0.5);
  }

  /* Intersection Observer fade-in */
  .fade-in {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.6s ease, transform 0.6s ease;
  }

  .fade-in.visible {
    opacity: 1;
    transform: translateY(0);
  }
</style>

<script>
  // Intersection Observer for fade-in animations
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('visible');
      }
    });
  }, observerOptions);

  // Initialize animations on page load
  document.addEventListener('DOMContentLoaded', () => {
    // Add fade-in class to all sections
    const sections = document.querySelectorAll('section, div[class*="py-20"]');
    sections.forEach((section, index) => {
      section.classList.add('fade-in');
      section.style.transitionDelay = `${index * 0.1}s`;
      observer.observe(section);
    });

    // Smooth scroll for anchor links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute('href'));
        if (target) {
          target.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
        }
      });
    });

    // Counter animation for stats
    const animateCounter = (element, target, suffix = '') => {
      let current = 0;
      const increment = target / 50;
      const timer = setInterval(() => {
        current += increment;
        if (current >= target) {
          current = target;
          clearInterval(timer);
        }
        element.textContent = Math.floor(current) + suffix;
      }, 30);
    };

    // Trigger stats animation when visible
    const statsElements = document.querySelectorAll('[class*="text-3xl"]');
    const statsObserver = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const text = entry.target.textContent.trim();
          
          if (text.includes('24h')) {
            // Skip animation for "< 24h"
            return;
          }
          
          const target = parseInt(text.replace(/[^\d]/g, ''));
          const suffix = text.includes('%') ? '%' : text.includes('+') ? '+' : '';
          
          if (target > 0) {
            animateCounter(entry.target, target, suffix);
            statsObserver.unobserve(entry.target);
          }
        }
      });
    });

    statsElements.forEach(el => {
      if (el.textContent.match(/\d/)) {
        statsObserver.observe(el);
      }
    });
  });
</script>