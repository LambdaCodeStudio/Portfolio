---
// src/components/layout/Layout.astro
import Header from './Header.astro';
import Footer from './Footer.astro';

interface Props {
  title: string;
  description?: string;
  keywords?: string;
  ogImage?: string;
  canonical?: string;
  noindex?: boolean;
}

const { 
  title, 
  description = "Lambda Code Studio - Desarrollamos soluciones digitales innovadoras. Especialistas en desarrollo web, aplicaciones móviles, backend APIs y diseño UI/UX con tecnologías modernas.",
  keywords = "desarrollo web, aplicaciones móviles, React, React Native, Node.js, UI/UX, frontend, backend, Argentina, La Plata",
  ogImage = "/og-image.jpg",
  canonical,
  noindex = false
} = Astro.props;

// Obtener la URL actual para canonical y Open Graph
const baseUrl = Astro.site?.href || `${Astro.url.protocol}//${Astro.url.host}`;
const currentUrl = new URL(Astro.url.pathname, baseUrl);
const canonicalURL = canonical || currentUrl.href;

// Configuración SEO
const siteName = "Lambda Code Studio";
const siteDescription = "Transformamos ideas en soluciones digitales excepcionales. Desarrollo web, apps móviles y consultoría tecnológica en Argentina.";
---

<!DOCTYPE html>
<html lang="es" class="scroll-smooth">
  <head>
    <!-- Meta Tags Básicos -->
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- SEO Meta Tags -->
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta name="keywords" content={keywords} />
    <link rel="canonical" href={canonicalURL} />
    
    {noindex && <meta name="robots" content="noindex, nofollow" />}
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(ogImage, baseUrl)} />
    <meta property="og:site_name" content={siteName} />
    <meta property="og:locale" content="es_AR" />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={new URL(ogImage, baseUrl)} />
    <meta property="twitter:site" content="@lambdacodestudio" />

    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <meta name="theme-color" content="#8b5cf6" />

    <!-- Preconnect para optimización -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    
    <!-- DNS Prefetch para recursos externos -->
    <link rel="dns-prefetch" href="//wa.me" />
    <link rel="dns-prefetch" href="//instagram.com" />
    <link rel="dns-prefetch" href="//linkedin.com" />

    <!-- Structured Data -->
    <script type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "Organization",
      "name": siteName,
      "url": baseUrl,
      "logo": new URL("/logo.png", baseUrl),
      "description": siteDescription,
      "address": {
        "@type": "PostalAddress",
        "addressLocality": "La Plata",
        "addressRegion": "Buenos Aires",
        "addressCountry": "AR"
      },
      "contactPoint": {
        "@type": "ContactPoint",
        "telephone": "+54-2227-478196",
        "contactType": "customer service",
        "availableLanguage": ["Spanish"]
      },
      "sameAs": [
        "https://www.instagram.com/lambdacodestudio/",
        "https://github.com/LambdaCodeStudio"
      ],
      "serviceArea": {
        "@type": "Country",
        "name": "Argentina"
      },
      "areaServed": ["Argentina", "Uruguay", "Chile"],
      "knowsAbout": [
        "Web Development",
        "Mobile App Development", 
        "React",
        "React Native",
        "Node.js",
        "UI/UX Design"
      ]
    })} />

    <!-- Performance Optimizations -->
    <link rel="preload" href="/fonts/inter-var.woff2" as="font" type="font/woff2" crossorigin />
    
    <!-- Critical CSS inline -->
    <style>
      /* Critical CSS para LCP */
      html {
        font-family: system-ui, sans-serif;
        scroll-behavior: smooth;
      }
      
      body {
        margin: 0;
        background-color: #000;
        color: #fff;
        overflow-x: hidden;
      }

      /* Loading skeleton */
      .loading-skeleton {
        background: linear-gradient(90deg, #1f2937 25%, #374151 50%, #1f2937 75%);
        background-size: 200% 100%;
        animation: loading 1.5s infinite;
      }

      @keyframes loading {
        0% { background-position: 200% 0; }
        100% { background-position: -200% 0; }
      }

      /* Prevent FOUC */
      .fade-in {
        opacity: 0;
        animation: fadeIn 0.5s ease-in-out forwards;
      }

      @keyframes fadeIn {
        to { opacity: 1; }
      }
    </style>
  </head>
  
  <body class="bg-black text-white antialiased overflow-x-hidden">
    <!-- Skip to main content for accessibility -->
    <a href="#main-content" class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 bg-violet-500 text-white px-4 py-2 rounded-lg z-50">
      Saltar al contenido principal
    </a>

    <!-- Background Effects -->
    <div class="fixed inset-0 -z-10">
      <!-- Base gradient -->
      <div class="absolute inset-0 bg-gradient-to-br from-violet-900/10 via-black to-fuchsia-900/10"></div>
      
      <!-- Dot pattern -->
      <div class="absolute inset-0 bg-[radial-gradient(rgba(255,255,255,0.02)_1px,transparent_1px)] bg-[size:24px_24px]"></div>
      
      <!-- Animated gradient orbs -->
      <div class="absolute top-0 left-1/4 w-96 h-96 bg-violet-500/5 rounded-full blur-3xl animate-pulse"></div>
      <div class="absolute bottom-0 right-1/4 w-96 h-96 bg-fuchsia-500/5 rounded-full blur-3xl animate-pulse" style="animation-delay: 2s;"></div>
      <div class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-64 h-64 bg-pink-500/5 rounded-full blur-3xl animate-pulse" style="animation-delay: 4s;"></div>
    </div>

    <!-- Loading Indicator -->
    <div id="loading-bar" class="fixed top-0 left-0 w-full h-1 bg-gradient-to-r from-violet-500 to-fuchsia-500 transform -translate-x-full transition-transform duration-300 z-50"></div>

    <!-- Header -->
    <Header />
    
    <!-- Main Content -->
    <main id="main-content" class="relative min-h-screen pt-16 sm:pt-20">
      <!-- Page Transition Overlay -->
      <div id="page-transition" class="fixed inset-0 bg-black z-40 pointer-events-none opacity-0 transition-opacity duration-300"></div>
      
      <slot />
    </main>

    <!-- Back to Top Button -->
    <button 
      id="back-to-top"
      class="fixed bottom-8 right-8 p-3 bg-gradient-to-r from-violet-500 to-fuchsia-500 text-white rounded-full shadow-lg opacity-0 invisible transition-all duration-300 hover:scale-110 z-40"
      aria-label="Volver arriba"
    >
      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18"></path>
      </svg>
    </button>

    <!-- Footer -->
    <Footer />

    <!-- Scripts -->
    <script>
      // Performance monitoring
      let pageLoadStart = performance.now();

      // Loading bar functionality
      function showLoadingBar() {
        const loadingBar = document.getElementById('loading-bar');
        loadingBar.style.transform = 'translateX(0)';
        setTimeout(() => {
          loadingBar.style.transform = 'translateX(100%)';
        }, 300);
      }

      // Back to top functionality
      function initBackToTop() {
        const backToTopBtn = document.getElementById('back-to-top');
        
        function toggleBackToTop() {
          if (window.scrollY > 300) {
            backToTopBtn.classList.remove('opacity-0', 'invisible');
            backToTopBtn.classList.add('opacity-100', 'visible');
          } else {
            backToTopBtn.classList.add('opacity-0', 'invisible');
            backToTopBtn.classList.remove('opacity-100', 'visible');
          }
        }

        window.addEventListener('scroll', toggleBackToTop);
        
        backToTopBtn.addEventListener('click', () => {
          window.scrollTo({
            top: 0,
            behavior: 'smooth'
          });
        });
      }

      // Smooth scroll for anchor links
      function initSmoothScroll() {
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
          anchor.addEventListener('click', function (e) {
            const href = this.getAttribute('href');
            if (href === '#') return;
            
            const target = document.querySelector(href);
            if (target) {
              e.preventDefault();
              target.scrollIntoView({
                behavior: 'smooth',
                block: 'start'
              });
            }
          });
        });
      }

      // Page transitions
      function initPageTransitions() {
        const transition = document.getElementById('page-transition');
        
        // Handle internal navigation
        document.addEventListener('click', (e) => {
          const link = e.target.closest('a');
          if (link && link.href && link.href.startsWith(window.location.origin)) {
            const url = new URL(link.href);
            if (url.pathname !== window.location.pathname && !link.target) {
              e.preventDefault();
              
              // Show transition
              transition.style.opacity = '1';
              transition.style.pointerEvents = 'all';
              
              // Navigate after animation
              setTimeout(() => {
                window.location.href = link.href;
              }, 300);
            }
          }
        });
      }

      // Lazy loading for images
      function initLazyLoading() {
        if ('IntersectionObserver' in window) {
          const imageObserver = new IntersectionObserver((entries, observer) => {
            entries.forEach(entry => {
              if (entry.isIntersecting) {
                const img = entry.target;
                img.src = img.dataset.src;
                img.classList.remove('loading-skeleton');
                img.classList.add('fade-in');
                observer.unobserve(img);
              }
            });
          });

          document.querySelectorAll('img[data-src]').forEach(img => {
            imageObserver.observe(img);
          });
        }
      }

      // Error handling
      window.addEventListener('error', (e) => {
        console.error('JavaScript error:', e.error);
        // Optionally send to analytics
      });

      // Performance metrics
      window.addEventListener('load', () => {
        const loadTime = performance.now() - pageLoadStart;
        console.log(`Page loaded in ${loadTime.toFixed(2)}ms`);
        
        // Web Vitals
        if ('web-vitals' in window) {
          getCLS(console.log);
          getFID(console.log);
          getFCP(console.log);
          getLCP(console.log);
          getTTFB(console.log);
        }
      });

      // Initialize everything when DOM is ready
      document.addEventListener('DOMContentLoaded', () => {
        initBackToTop();
        initSmoothScroll();
        initPageTransitions();
        initLazyLoading();
        showLoadingBar();
        
        // Add fade-in to body
        document.body.classList.add('fade-in');
        
        // Performance check
        const loadTime = performance.now() - pageLoadStart;
        if (loadTime > 3000) {
          console.warn('Slow page load detected:', loadTime);
        }
      });

      // Service Worker registration
      if ('serviceWorker' in navigator) {
        window.addEventListener('load', () => {
          navigator.serviceWorker.register('/sw.js')
            .then((registration) => {
              console.log('SW registered: ', registration);
            })
            .catch((registrationError) => {
              console.log('SW registration failed: ', registrationError);
            });
        });
      }
    </script>

    <!-- Analytics (Google Analytics 4) -->
    <!-- <script async src="https://www.googletagmanager.com/gtag/js?id=GA_MEASUREMENT_ID"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'GA_MEASUREMENT_ID');
    </script> -->

    <!-- Schema markup for enhanced SEO -->
    <script type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "WebSite",
      "name": siteName,
      "url": baseUrl,
      "potentialAction": {
        "@type": "SearchAction",
        "target": {
          "@type": "EntryPoint",
          "urlTemplate": `${baseUrl}/proyectos?q={search_term_string}`
        },
        "query-input": "required name=search_term_string"
      }
    })} />
  </body>
</html>

<style is:global>
  /* Global styles */
  
  /* Font face for custom fonts */
  @font-face {
    font-family: 'Inter';
    src: url('/fonts/inter-var.woff2') format('woff2');
    font-weight: 100 900;
    font-style: normal;
    font-display: swap;
  }

  /* CSS Custom Properties */
  :root {
    --primary-violet: #8b5cf6;
    --primary-fuchsia: #ec4899;
    --primary-pink: #f472b6;
    --bg-black: #000000;
    --bg-gray-900: #111827;
    --text-white: #ffffff;
    --text-gray-400: #9ca3af;
  }

  /* Reset and base styles */
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }

  html {
    font-family: 'Inter', system-ui, sans-serif;
    scroll-behavior: smooth;
    scroll-padding-top: 5rem;
  }

  body {
    margin: 0;
    line-height: 1.6;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
  }

  /* Screen reader only content */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  .sr-only:focus {
    position: static;
    width: auto;
    height: auto;
    padding: initial;
    margin: initial;
    overflow: visible;
    clip: auto;
    white-space: normal;
  }

  /* Focus styles for accessibility */
  *:focus {
    outline: 2px solid var(--primary-violet);
    outline-offset: 2px;
  }

  *:focus:not(:focus-visible) {
    outline: none;
  }

  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.1);
  }

  ::-webkit-scrollbar-thumb {
    background: linear-gradient(to bottom, var(--primary-violet), var(--primary-fuchsia));
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: linear-gradient(to bottom, #7c3aed, #db2777);
  }

  /* Selection styles */
  ::selection {
    background-color: var(--primary-violet);
    color: white;
  }

  ::-moz-selection {
    background-color: var(--primary-violet);
    color: white;
  }

  /* Utility classes */
  .gradient-text {
    background: linear-gradient(135deg, var(--primary-violet), var(--primary-fuchsia), var(--primary-pink));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .glass-effect {
    background: rgba(0, 0, 0, 0.4);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  /* Animation utilities */
  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
  }

  @keyframes pulse-glow {
    0%, 100% { box-shadow: 0 0 20px rgba(139, 92, 246, 0.3); }
    50% { box-shadow: 0 0 40px rgba(139, 92, 246, 0.6); }
  }

  @keyframes gradient-shift {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  .animate-pulse-glow {
    animation: pulse-glow 3s ease-in-out infinite;
  }

  .animate-gradient {
    background-size: 400% 400%;
    animation: gradient-shift 6s ease infinite;
  }

  /* Performance optimizations */
  img {
    max-width: 100%;
    height: auto;
  }

  .will-change-transform {
    will-change: transform;
  }

  .will-change-opacity {
    will-change: opacity;
  }

  /* Print styles */
  @media print {
    .no-print {
      display: none !important;
    }
  }

  /* Reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
    
    html {
      scroll-behavior: auto;
    }
  }

  /* Dark mode support (in case we add it later) */
  @media (prefers-color-scheme: dark) {
    /* Already dark by default */
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .text-gray-400 {
      color: #ffffff;
    }
    
    .border-violet-500\/20 {
      border-color: #8b5cf6;
    }
  }
</style>